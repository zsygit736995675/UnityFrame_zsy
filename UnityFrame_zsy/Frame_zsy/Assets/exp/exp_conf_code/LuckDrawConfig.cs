using System;using System.Collections.Generic;using UnityEngine;public class LuckDrawConfig : BaseConfig{    public static bool resLoaded = false;    private static Dictionary<int, LuckDrawConfig> dic = new Dictionary<int, LuckDrawConfig>();    public static List<LuckDrawConfig> array = new List<LuckDrawConfig>();    public static void Init()    {        LoadRes();    }    public readonly int id;    public readonly string name;    public readonly string imageName;    public readonly int type;    public readonly int isActive;    public readonly int order;    public readonly string background;    public LuckDrawConfig(int id, string name, string imageName, int type, int isActive, int order, string background)    {        this.id = id;        this.name = name;        this.imageName = imageName;        this.type = type;        this.isActive = isActive;        this.order = order;        this.background = background;    }    private static void OnLoadFile( byte[] data)    { 		ReadStream rs = new ReadStream(data);        /*int file_len = */rs.ReadInt();        string flag = rs.ReadString();        if(flag != "LuckDrawConfig")        {            LogWarning("invalid file flag" + flag);            return;        }        int col_cnt = rs.ReadShort();        if(col_cnt != 7)        {            LogWarning("col cnt invalid" + col_cnt + " : " + 7);            return;        }        int row_cnt = rs.ReadInt();        for(int i = 0; i < row_cnt; i++)        {            Add_Item(rs);        }        resLoaded = true;    }    private static void Add_Item(ReadStream rs)    {        int id = rs.ReadInt();        string name = rs.ReadString();        string imageName = rs.ReadString();        int type = rs.ReadInt();        int isActive = rs.ReadInt();        int order = rs.ReadInt();        string background = rs.ReadString();        LuckDrawConfig new_obj_LuckDrawConfig = new LuckDrawConfig(id, name, imageName, type, isActive, order, background);                if(dic.ContainsKey(id))        {            LogWarning("duplicate key: " + id);            return;        }        dic.Add(id, new_obj_LuckDrawConfig);        array.Add(new_obj_LuckDrawConfig);    }    private static void LoadRes()    {        if(resLoaded) return;        byte[] data = GetAsset("LuckDrawConfig.bytes");		OnLoadFile(data);    }    public static LuckDrawConfig GetConfig( int id )    {    	LuckDrawConfig config;    	if ( dic.TryGetValue(id, out config ) )    	{    		return config;    	}    	else    	{    		return null;    	}    }}