using System;using System.Collections.Generic;using UnityEngine;public class TalkConfig : BaseConfig{    public static bool resLoaded = false;    private static Dictionary<int, TalkConfig> dic = new Dictionary<int, TalkConfig>();    public static List<TalkConfig> array = new List<TalkConfig>();    public static void Init()    {        LoadRes();    }    public readonly int id;    public readonly string name;    public readonly int[] DialogID;    public readonly int DialogNum;    public readonly int RoleID;    public TalkConfig(int id, string name, int[] DialogID, int DialogNum, int RoleID)    {        this.id = id;        this.name = name;        this.DialogID = DialogID;        this.DialogNum = DialogNum;        this.RoleID = RoleID;    }    private static void OnLoadFile( byte[] data)    { 		ReadStream rs = new ReadStream(data);        /*int file_len = */rs.ReadInt();        string flag = rs.ReadString();        if(flag != "TalkConfig")        {            LogWarning("invalid file flag" + flag);            return;        }        int col_cnt = rs.ReadShort();        if(col_cnt != 5)        {            LogWarning("col cnt invalid" + col_cnt + " : " + 5);            return;        }        int row_cnt = rs.ReadInt();        for(int i = 0; i < row_cnt; i++)        {            Add_Item(rs);        }        resLoaded = true;    }    private static void Add_Item(ReadStream rs)    {            int arr_item_len_TalkConfig;        int id = rs.ReadInt();        string name = rs.ReadString();        arr_item_len_TalkConfig = rs.ReadShort();        int[] DialogID = new int [arr_item_len_TalkConfig];        for(int i = 0; i < arr_item_len_TalkConfig; ++i)            DialogID[i] = rs.ReadInt();        int DialogNum = rs.ReadInt();        int RoleID = rs.ReadInt();        TalkConfig new_obj_TalkConfig = new TalkConfig(id, name, DialogID, DialogNum, RoleID);                if(dic.ContainsKey(id))        {            LogWarning("duplicate key: " + id);            return;        }        dic.Add(id, new_obj_TalkConfig);        array.Add(new_obj_TalkConfig);    }    private static void LoadRes()    {        if(resLoaded) return;        byte[] data = GetAsset("TalkConfig.bytes");		OnLoadFile(data);    }    public static TalkConfig GetConfig( int id )    {    	TalkConfig config;    	if ( dic.TryGetValue(id, out config ) )    	{    		return config;    	}    	else    	{    		return null;    	}    }}